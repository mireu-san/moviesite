{"version":3,"sources":["assets/noPosterPaimon.jpg","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Components/Header.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Container","styled","div","Title","span","Grid","Section","title","children","role","aria-label","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","default","length","substring","HomePresenter","nowPlaying","popular","upcoming","loading","error","Helmet","Loader","map","movie","poster_path","original_title","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","encodeURIComponent","tvApi","HomeContainer","state","a","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","target","preventDefault","searchByTerm","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","Video","iframe","DetailPresenter","result","activeTab","arrTabName","clickHandler","runtime","episode_run_time","genres","genre","index","name","overview","videos","src","key","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1ec5a86f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterPaimon.19df203f.jpg\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  :not(:last-child) {\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 15px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  margin-top: 25px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 25px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n}\r\n\r\nexport default Section;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 32px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport default () => (\r\n  <Container>\r\n    <span role=\"img\" aria-label=\"Loading\">\r\n      ♨Now Loading...♨\r\n    </span>\r\n  </Container>\r\n);","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  color: ${props => props.color};\r\n`\r\n\r\nconst Message = ({ text, color }) => (\r\n  <Container>\r\n    <Text color={color}>{text}</Text>\r\n  </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Message;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${props => props.bgUrl});\r\n  height: 180px;\r\n  background-size: cover;\r\n  border-radius: 4px;\r\n  background-position: center center;\r\n  transition: opacity 0.5s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  bottom: 5px;\r\n  right: 5px;\r\n  position: absolute;\r\n  opacity: 0;\r\n  transition: opacity 0.5s linear;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(255,255,255,0.5);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image \r\n          bgUrl={\r\n            imageUrl \r\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}` \r\n              : require(\"../assets/noPosterPaimon.jpg\").default\r\n          } \r\n        />\r\n\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">\r\n            ★\r\n          </span>{\" \"}\r\n          {rating}/10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>\r\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\r\n      </Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool\r\n};\r\n\r\nexport default Poster;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"../../Components/Section\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({nowPlaying, popular, upcoming, loading, error}) => (\r\n  <>\r\n      <Helmet>\r\n        <title>Movies | Miflix</title>\r\n      </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        <Helmet>\r\n          <title>Movies | Miflix</title>\r\n        </Helmet>\r\n        {nowPlaying && nowPlaying.length > 0 && (\r\n          <Section title=\"Now Playing\">\r\n            {nowPlaying.map(movie => (\r\n              <Poster \r\n                key={movie.id} \r\n                id={movie.id} \r\n                imageUrl={movie.poster_path} \r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}  \r\n                isMovie={true} \r\n              />\r\n          ))}\r\n          </Section>\r\n        )}\r\n        {upcoming && upcoming.length > 0 && (\r\n          <Section title=\"Upcoming Movie\">\r\n            {upcoming.map(movie => (\r\n              <Poster \r\n                key={movie.id} \r\n                id={movie.id} \r\n                imageUrl={movie.poster_path} \r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}  \r\n                isMovie={true} \r\n              />\r\n          ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular Movie\">\r\n            {popular.map(movie => (\r\n              <Poster \r\n                key={movie.id} \r\n                id={movie.id} \r\n                imageUrl={movie.poster_path} \r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}  \r\n                isMovie={true} \r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  upcoming: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default HomePresenter;","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL:\"https://api.themoviedb.org/3\",\r\n  params: {\r\n    api_key:\"b156b83712c8d63f6f575e7148b8d408\",\r\n    language: \"ko\"\r\n  }\r\n});\r\n\r\n\r\n\r\nexport const moviesApi = {\r\n  nowPlaying: () => api.get(\"movie/now_playing\"),\r\n  upcoming: () => api.get(\"movie/upcoming\"),\r\n  popular: () => api.get(\"movie/popular\"),\r\n  movieDetail: id =>\r\n    api.get(`movie/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\"\r\n      }\r\n    }),\r\n  search: term =>\r\n    api.get(\"search/movie\", {\r\n      params: {\r\n        query: encodeURIComponent(term)\r\n      }\r\n    })\r\n};\r\n\r\nexport const tvApi = {\r\n  topRated: () => api.get(\"tv/top_rated\"),\r\n  popular: () => api.get(\"tv/popular\"),\r\n  airingToday: () => api.get(\"tv/airing_today\"),\r\n  showDetail: id =>\r\n    api.get(`tv/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\"\r\n      }\r\n    }),\r\n  search: term =>\r\n    api.get(\"search/tv\", {\r\n      params: {\r\n        query: encodeURIComponent(term)\r\n      }\r\n    })\r\n};\r\n","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;","import React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport { moviesApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    nowPlaying: null,\r\n    upcoming: null,\r\n    popular: null,\r\n    error: null,\r\n    loading: true\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: nowPlaying }\r\n      } = await moviesApi.nowPlaying();\r\n      const {\r\n        data: { results: upcoming }\r\n      } = await moviesApi.upcoming();\r\n      const {\r\n        data: { results: popular }\r\n      } = await moviesApi.popular();\r\n      this.setState({\r\n        nowPlaying,\r\n        upcoming,\r\n        popular\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find movie information.\"\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\r\n    return (\r\n      <HomePresenter\r\n        nowPlaying={nowPlaying}\r\n        upcoming={upcoming}\r\n        popular={popular}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"../../Components/Section\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>TV | Miflix</title>\r\n    </Helmet> \r\n\r\n    {loading ? (\r\n\r\n    <Loader />\r\n\r\n    ) : (\r\n      <Container>\r\n        {topRated && topRated.length > 0 && (\r\n          <Section title=\"Top Rated Shows\">\r\n            {topRated.map(show => (\r\n              <Poster \r\n                key={show.id} \r\n                id={show.id} \r\n                imageUrl={show.poster_path} \r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date.substring(0, 4)}\r\n                />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular Shows\">\r\n            {popular.map(show => (\r\n              <Poster \r\n                key={show.id} \r\n                id={show.id} \r\n                imageUrl={show.poster_path} \r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date.substring(0, 4)}  \r\n                />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {airingToday && airingToday.length > 0 && (\r\n          <Section title=\"Airing Today\">\r\n            {airingToday.map(show => (\r\n              <Poster \r\n                key={show.id} \r\n                id={show.id} \r\n                imageUrl={show.poster_path} \r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date.substring(0, 4)}  \r\n                />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}  \r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nTVPresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default TVPresenter;","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;","import React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\nimport { tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    topRated: null,\r\n    popular: null,\r\n    airingToday: null,\r\n    loading: true,\r\n    error: null\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: topRated }\r\n      } = await tvApi.topRated();\r\n      const {\r\n        data: { results: popular }\r\n      } = await tvApi.popular();\r\n      const {\r\n        data: { results: airingToday }\r\n      } = await tvApi.airingToday();\r\n      this.setState({ topRated, popular, airingToday });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find TV information.\"\r\n      });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { topRated, popular, airingToday, loading, error } = this.state;\r\n    return (\r\n      <TVPresenter\r\n        topRated={topRated}\r\n        popular={popular}\r\n        airingToday={airingToday}\r\n        loading={loading}\r\n        error={error}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: rgba(20, 20, 20, 0.8);\r\n  z-index: 10;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 80px;\r\n  height: 50px;\r\n  text-align: center;\r\n  border-bottom: 3px solid\r\n    ${props => (props.current ? \"#3498db\" : \"transparent\")};\r\n  transition: border-bottom 0.5s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default withRouter(({ location: { pathname } }) => (\r\n  <Header>\r\n    <List>\r\n      <Item current={pathname === \"/\"}>\r\n        <SLink to=\"/\">Movies</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/tv\"}>\r\n        <SLink to=\"/tv\">TV</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/search\"}>\r\n        <SLink to=\"/search\">Search</SLink>\r\n      </Item>\r\n    </List>\r\n  </Header>\r\n));\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Section from \"../../Components/Section\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;  \r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width: 100%;\r\n`;\r\n\r\n\r\nconst SearchPresenter = ({\r\n  movieResults, \r\n  tvResults, \r\n  loading, \r\n  searchTerm, \r\n  handleSubmit, \r\n  error,\r\n  updateTerm\r\n}) => (\r\n    <Container>\r\n      <Helmet>\r\n        <title>Search | Miflix</title>\r\n      </Helmet>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Input \r\n          placeholder=\"Search Movies or TV Shows here!\" \r\n          value={searchTerm} \r\n          onChange={updateTerm}\r\n        />\r\n      </Form>\r\n      {loading ? (\r\n        <Loader /> \r\n      ) : (\r\n        <> \r\n          {movieResults && movieResults.length > 0 && (\r\n            <Section title=\"Search Results : Movie\">\r\n              {movieResults.map(movie => (\r\n                <Poster \r\n                  key={movie.id} \r\n                  id={movie.id} \r\n                  imageUrl={movie.poster_path} \r\n                  title={movie.original_title}\r\n                  rating={movie.vote_average}\r\n                  year={movie.release_date.substring(0, 4)}  \r\n                  isMovie={true} \r\n                />\r\n              ))}\r\n        </Section>\r\n      )}\r\n          {tvResults && tvResults.length > 0 && (\r\n            <Section title=\"Search Results : TV Show\">\r\n              {tvResults.map(show => (\r\n                <Poster \r\n                  key={show.id} \r\n                  id={show.id} \r\n                  imageUrl={show.poster_path} \r\n                  title={show.original_name}\r\n                  rating={show.vote_average}\r\n                  year={show.first_air_date.substring(0, 4)}\r\n                />\r\n              ))}\r\n            </Section>\r\n      )}\r\n      {error && <Message color=\"#e74c3c\" text={error} />}\r\n      {tvResults && \r\n        movieResults &&\r\n        tvResults.length === 0 &&\r\n        movieResults.length === 0 && (\r\n          <Message text=\"Nothing found\" color=\"#95a5a6\" />\r\n        )}\r\n      </> \r\n    )}\r\n  </Container>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: PropTypes.array,\r\n  tvResults: PropTypes.array,\r\n  error: PropTypes.string,\r\n  searchTerm: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SearchPresenter;","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;","import React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\nimport { moviesApi, tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    movieResults: null,\r\n    tvResults: null,\r\n    searchTerm: \"\",\r\n    loading: false,\r\n    error: null\r\n  };\r\n\r\nupdateTerm = (event) => {\r\n  const { \r\n    target: { value } \r\n  } = event;\r\n  this.setState({\r\n    searchTerm: value\r\n  });\r\n};\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    if (searchTerm !== \"\") {\r\n      this.searchByTerm();\r\n    }\r\n  };\r\n\r\n  searchByTerm = async () => {\r\n    const { searchTerm } = this.state;\r\n    this.setState({ loading: true });\r\n    try {\r\n      const {\r\n        data: { results: movieResults }\r\n      } = await moviesApi.search(searchTerm);\r\n      const {\r\n        data: { results: tvResults }\r\n      } = await tvApi.search(searchTerm);\r\n      this.setState({\r\n        movieResults,\r\n        tvResults\r\n      });\r\n    } catch {\r\n      this.setState({ error: \"Can't find results.\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\r\n    return (\r\n      <SearchPresenter\r\n        movieResults={movieResults}\r\n        tvResults={tvResults}\r\n        loading={loading}\r\n        error={error}\r\n        searchTerm={searchTerm}\r\n        handleSubmit={this.handleSubmit}\r\n        updateTerm={this.updateTerm}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"Components/Loader\";\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\n\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n  height: 100%;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  height: 100%;\r\n  border-radius: 5px;\r\n  margin-left: 35px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 10px; \r\n`;\r\n\r\nconst Title = styled.h3`\r\n  font-size: 32px;\r\n  margin-bottom: 20px;\r\n  margin-left: 20px;\r\n`;\r\n\r\nconst ItemContainer = styled.span`\r\n  margin: 20px 0;\r\n  margin-left: 20px;\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 20px;\r\n  opacity: 0.7;\r\n  line-height: 1.5;  \r\n  width: 50%;\r\n  margin-left: 20px;\r\n  margin-top: 20px;\r\n`;\r\n\r\n\r\nconst TabVideoInfo = styled.div`\r\n  display: flex;\r\n  width: 50%;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst TabInfo = styled.span`\r\n  font-size:14px;\r\n  font-weight:700;\r\n  flex:1;\r\n  color:#fff;\r\n  text-align:center;\r\n  padding-bottom:8px;\r\n  cursor:pointer;\r\n  border-bottom:5px solid ${props => props.current ? \"#8e44ad\" : \"transparent\"};\r\n  transition:border-bottom .5s ease-in-out;\r\n`;\r\n\r\n\r\nconst trailerVideo = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-wrap: nowrap;\r\n  width: 100%;\r\n  padding: 30px 0px 50px 0px;\r\n  overflow: auto;\r\n  &:after{\r\n    content:'';\r\n    position:absolute;\r\n    width:10%;\r\n    height:calc(100% - 80px);\r\n    top: 30px;\r\n    right: 0;\r\n    background: linear-gradient(to right, transparent, #000);\r\n  }\r\n`;\r\n\r\nconst Video = styled.iframe`\r\n  width: 30%;\r\n  height: 30%;\r\n  margin: 20px;\r\n`;\r\n\r\nconst DetailPresenter = ({ result, loading, error, activeTab, arrTabName, clickHandler }) =>\r\n  loading ? (\r\n    <>\r\n      <Helmet>\r\n        <title>\r\n          Now Loading... | Miflix\r\n        </title>\r\n      </Helmet>\r\n    <Loader /> \r\n    </>\r\n  ) : ( \r\n  <Container>\r\n    <Helmet>\r\n    <title>\r\n      {result.original_title ? result.original_title : result.original_name}{\" \"} | Miflix\r\n    </title>\r\n    </Helmet>    \r\n    <Backdrop \r\n      bgImage={`https://image.tmdb.org/t/p/original${result.poster_path}`}\r\n    />\r\n    <Content>\r\n      <Cover\r\n        bgImage={\r\n          result.poster_path \r\n          ? `https://image.tmdb.org/t/p/original${result.poster_path}` \r\n          : require(\"../../assets/noPosterPaimon.jpg\")\r\n        }\r\n      />\r\n    <Data>\r\n      <Title>\r\n        {result.original_title \r\n          ? result.original_title \r\n          : result.original_name}\r\n      </Title>\r\n      <ItemContainer>\r\n        <Item>\r\n          {result.release_date\r\n            ? result.release_date.substring(0, 4)\r\n            : result.first_air_date.substring(0, 4)}\r\n        </Item>\r\n        <Divider>ㆍ</Divider>\r\n        <Item>\r\n          {result.runtime ? result.runtime : result.episode_run_time[0]} min\r\n        </Item>\r\n        \r\n        <Divider>ㆍ</Divider>\r\n        <Item>\r\n          {result.genres &&\r\n            result.genres.map((genre, index) => \r\n              index === result.genres.length - 1\r\n                ? genre.name\r\n                : `${genre.name} / `\r\n            )}\r\n        </Item>\r\n      </ItemContainer>\r\n      <Overview>{result.overview}</Overview>\r\n\r\n\r\n            <trailerVideo>\r\n              {\r\n                result.videos.results && result.videos.results.length > 0 ?\r\n                result.videos.results.map((result) => (\r\n                  <trailerVideoItem key={result.id}>\r\n                    <Video src={`https://www.youtube.com/embed/${result.key}`}/>\r\n                  </trailerVideoItem>\r\n                ) \r\n              ) : \"There is no available Youtube Video.\"\r\n            }\r\n            </trailerVideo>\r\n          )\r\n        \r\n    </Data>\r\n  </Content>\r\n</Container>\r\n);\r\n\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  error: PropTypes.bool.isRequired,\r\n  loading: PropTypes.string,\r\n  arrTabName: PropTypes.array\r\n};\r\n\r\nexport default DetailPresenter;","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;","import React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\nimport { moviesApi, tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      location: { pathname }\r\n    } = props;\r\n    this.state = {\r\n      result: null,\r\n      error: null,\r\n      loading: true,\r\n      isMovie: pathname.includes(\"/movie/\")\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id }\r\n      },\r\n      history: { push }\r\n    } = this.props;\r\n    const { isMovie } = this.state;\r\n    const parsedId = parseInt(id);\r\n    if (isNaN(parsedId)) {\r\n      return push(\"/\");\r\n    }\r\n    let result = null;\r\n    try {\r\n      if (isMovie) {\r\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\r\n      } else {\r\n        ({ data: result } = await tvApi.showDetail(parsedId));\r\n      }\r\n    } catch {\r\n      this.setState({ error: \"Can't find anything.\" });\r\n    } finally {\r\n      this.setState({ loading: false, result });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { result, error, loading } = this.state;\r\n    return <DetailPresenter result={result} error={error} loading={loading} />;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch\r\n} from \"react-router-dom\";\r\nimport Home from \"Routes/Home\";\r\nimport TV from \"Routes/TV\";\r\nimport Header from \"Components/Header\";\r\nimport Search from \"Routes/Search\";\r\nimport Detail from \"Routes/Detail\";\r\n\r\nexport default () => (\r\n  <Router>\r\n    <>\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/tv\" component={TV} />\r\n        <Route path=\"/search\" component={Search} />\r\n        <Route path=\"/movie/:id\" component={Detail} />\r\n        <Route path=\"/show/:id\" component={Detail} />\r\n        <Redirect from=\"*\" to=\"/\" />\r\n      </Switch>\r\n    </>\r\n  </Router>\r\n);\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit;\r\n    }\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    body{\r\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size:12px;\r\n        background-color:rgba(20, 20, 20, 1);\r\n        color:white;\r\n        padding-top:50px;\r\n    }\r\n`;\r\n\r\nexport default globalStyles;\r\n","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}